<?xml version="1.0" encoding="UTF-8"?>
<Report xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="report.xsd">
	<Name>3CPU Monitor by User Group</Name>
	<DisplayName>用户组</DisplayName>
	<Summary>统计指定用户组的CPU占用情况统计。</Summary>
	<Description><![CDATA[
	<h3>目的</h3>
	<ul type="disc">
		<li>该报表显示所选时间范围内指定用户组的CPU占用情况。</li>
	</ul>
	<h3>数据描述</h3>
	<ul type="disc">
		<li>该报表显示在指定时间内所选用户组的CPU占用情况。</li>
	</ul>
]]></Description>
	<Category>LSF</Category>
	<Folder>JobSlotUsage</Folder>
	<Parameters>
		<Parameter Name="DATA_GRANULARITY" Type="DROPDOWNLIST" Label="统计时间粒度">
			<Attributes>
				<Attribute Name="label" Value="Usage" />
				<Attribute Name="defaultValue" Value="HOUR" />
				<Attribute Name="onChange" Value="TIME.setTimePrecision(this.value)" />
			</Attributes>
			<ListValue>
				<Item Value="MINUTE" Label="按采样点" />
				<Item Value="HOUR" Label="按小时" />
				<Item Value="DAY" Label="按天" />
			</ListValue>
		</Parameter>
		<Parameter Name="TIME" Type="TIMEPICK" Label="时间">
			<Attributes>
				<Attribute Name="startTimeName" Value="StartTime"/>
				<Attribute Name="endTimeName" Value="EndTime"/>
				<Attribute Name="defaultMethod" Value="MONTH"/>
				<Attribute Name="timeValue" Value="1"/>
				<Attribute Name="timeUnit" Value="d"/>
				<Attribute Name="timePrecision" Value="HOUR"/>
			</Attributes>
		</Parameter>
		<Parameter Name="GROUP_NAME" Type="LISTBOX" DefaultValue="" Label="用户组" Lazy="false">
			<Attributes>
					<Attribute Name="label" Value="GroupName"/>
					<Attribute Name="size" Value="5"/>
					<Attribute Name="showAll" Value="true"/>
			</Attributes>
			<Query DBType="STANDARD">
					<SQL><![CDATA[SELECT DISTINCT USER_GROUP_NAME,USER_DEPARTMENT_NAME, DEPARTMENT_MAP FROM USER_GROUP_DEPARTMENT ORDER BY DEPARTMENT_MAP ASC]]></SQL>
					<Field Type="Value" Column="USER_GROUP_NAME"/>
					<Field Type="Label" Column="USER_DEPARTMENT_NAME"/>
			</Query>
		</Parameter>
	</Parameters>
	<Queries>
		<!--Usage:
		<Query DBType="MySQL"><SQL><![CDATA[select TIME_STAMP as Timestamp, HOSTLIST_ID as HOST,MAX_VALUE as Max, MIN_VALUE as Min, FREE_VALUE as Free from ALLOCATION_REQUEST_EVENT where ParamA=%%%ParamA%%% and ParamB=%%%ParamB%%% and Timestamp between %%%T1%%% and %%%t2%%%]]></SQL></Query>
		-->
		<Query Name="DS1" DBType="STANDARD" MaxRowNum="100">
			<SQL><![CDATA[
SELECT NVL(AA.TIME_STAMP, BB.TIME_STAMP) TIME_STAMP,
	   NVL(AA.USER_DEPARTMENT_NAME, BB.USER_DEPARTMENT_NAME) USER_DEPARTMENT_NAME,
       NVL(AA.SUM_SLOT, 0) RUN,
	   NVL(AA.CPU_TIME_BY_JOB, 0)/3600 RUN_TIME_BY_JOB,
       NVL(AA.SUM_CPU_TIME, 0)/3600 RUN_TIME,
       NVL(BB.SUM_SLOT, 0) PEND
  FROM  (SELECT TIME_STAMP,
                       CLUSTER_NAME,
                       USER_GROUP_NAME GROUP_NAME,
					   USER_DEPARTMENT_NAME,
                       SUM(SUM_SLOT) / AVG(SAMPLING_COUNT) SUM_SLOT,
                       SUM(CPU_TIME_BY_JOB) / AVG(SAMPLING_COUNT) CPU_TIME_BY_JOB,
                       SUM(SUM_CPU_TIME) / AVG(SAMPLING_COUNT) SUM_CPU_TIME,
                       SUM(%%%EXEC_JOB%%%) NUM_EXECUTED_JOB

                  FROM %%%TABLE_NAME%%% T1, USER_GROUP_DEPARTMENT T2
                 WHERE TIME_STAMP >= %%%START_TIMESTAMP%%% AND TIME_STAMP < %%%END_TIMESTAMP%%%
                   AND GROUP_TYPE = 'user'
                   AND JOB_STATUS = 'RUN'
                   AND T1.GROUP_NAME = T2.USER_NAME
                   ${QUERY_CONDITION_USER_VALUE}
                 GROUP BY TIME_STAMP, CLUSTER_NAME, USER_GROUP_NAME, USER_DEPARTMENT_NAME) AA
          FULL OUTER JOIN (SELECT TIME_STAMP,
                                 CLUSTER_NAME,
                                 USER_GROUP_NAME GROUP_NAME,
								 USER_DEPARTMENT_NAME,
                                 SUM(SUM_SLOT) / AVG(SAMPLING_COUNT) AS SUM_SLOT
                            FROM %%%TABLE_NAME%%%    T1,
                                 USER_GROUP_DEPARTMENT T2
                           WHERE TIME_STAMP >= %%%START_TIMESTAMP%%% AND TIME_STAMP < %%%END_TIMESTAMP%%%
                             AND GROUP_TYPE = 'user'
                             AND JOB_STATUS IN
                                 ('PEND', 'SYS_SUSP', 'USER_SUSP')
                             AND T1.GROUP_NAME = T2.USER_NAME
                             ${QUERY_CONDITION_USER_VALUE}
                           GROUP BY TIME_STAMP,
                                    CLUSTER_NAME,
                                    USER_GROUP_NAME,
									USER_DEPARTMENT_NAME) BB
 ON AA.TIME_STAMP = BB.TIME_STAMP
   AND AA.GROUP_NAME = BB.GROUP_NAME
 ORDER BY TIME_STAMP
			]]></SQL>
		</Query>
				<Query Name="DS2" DBType="STANDARD" MaxRowNum="100">
			<SQL><![CDATA[
SELECT AA.*,
       BB.NUM_EXECUTED_JOB,
       BB.DEPARTMENT_MAP,
       BB.SUM_RUN_SLOT,
       DECODE(BB.NUM_EXECUTED_JOB,
              0,
              0,
              BB.SUM_RUN_SLOT / BB.NUM_EXECUTED_JOB) AVG_RUN_SLOT_PER_JOB,
       DECODE(BB.NUM_EXECUTED_JOB,
              0,
              0,
              SUM_RUN_TIME_BY_JOB / BB.NUM_EXECUTED_JOB) AVG_RUN_TIME_BY_JOB,
       DECODE(BB.NUM_EXECUTED_JOB, 0, 0, SUM_RUN_TIME / BB.NUM_EXECUTED_JOB) AVG_RUN_TIME_PER_JOB
  FROM (SELECT GROUP_NAME,
               USER_DEPARTMENT_NAME,
               SUM(RUN_SLOT) SUM_RUN_SLOT,
               MAX(RUN_SLOT) MAX_RUN_SLOT,
               AVG(RUN_SLOT) AVG_RUN_SLOT,
               SUM(RUN_TIME_BY_JOB) / 3600 SUM_RUN_TIME_BY_JOB,
               SUM(RUN_TIME) / 3600 SUM_RUN_TIME,
               MAX(RUN_TIME) / 3600 MAX_RUN_TIME,
               AVG(RUN_TIME) / 3600 AVG_RUN_TIME,
               MAX(PEND_SLOT) MAX_PEND_SLOT,
               AVG(PEND_SLOT) AVG_PEND_SLOT,
               MAX(REQUESTED_SLOT) MAX_REQUESTED_SLOT,
               AVG(REQUESTED_SLOT) AVG_REQUESTED_SLOT
          FROM (SELECT NVL(AA.TIME_STAMP, BB.TIME_STAMP) TIME_STAMP,
                       NVL(AA.USER_GROUP_NAME, BB.USER_GROUP_NAME) GROUP_NAME,
                       NVL(AA.USER_DEPARTMENT_NAME, BB.USER_DEPARTMENT_NAME) USER_DEPARTMENT_NAME,
                       NVL(AA.SUM_SLOT, 0) RUN_SLOT,
                       NVL(AA.CPU_TIME_BY_JOB, 0) RUN_TIME_BY_JOB,
                       NVL(AA.SUM_CPU_TIME, 0) RUN_TIME,
                       NVL(BB.SUM_SLOT, 0) PEND_SLOT,
                       NVL(AA.SUM_SLOT, 0) + NVL(BB.SUM_SLOT, 0) REQUESTED_SLOT
                  FROM (SELECT TIME_STAMP,
                               CLUSTER_NAME,
                               USER_GROUP_NAME,
                               USER_DEPARTMENT_NAME,
                               SUM(SUM_SLOT) / AVG(SAMPLING_COUNT) SUM_SLOT,
                               SUM(CPU_TIME_BY_JOB) CPU_TIME_BY_JOB,
                               SUM(SUM_CPU_TIME) SUM_CPU_TIME
                          FROM %%%TABLE_NAME%%% T1, USER_GROUP_DEPARTMENT T2
                         WHERE TIME_STAMP >= %%%START_TIMESTAMP%%%
                           AND TIME_STAMP < %%%END_TIMESTAMP%%%
                           AND GROUP_TYPE = 'user'
                           AND JOB_STATUS = 'RUN'
                           AND T1.GROUP_NAME = T2.USER_NAME
                           ${QUERY_CONDITION_USER_VALUE}
                         GROUP BY TIME_STAMP,
                                  CLUSTER_NAME,
                                  USER_GROUP_NAME,
                                  USER_DEPARTMENT_NAME) AA
                  FULL OUTER JOIN (SELECT TIME_STAMP,
                                         CLUSTER_NAME,
                                         USER_GROUP_NAME,
                                         USER_DEPARTMENT_NAME,
                                         SUM(SUM_SLOT) / AVG(SAMPLING_COUNT) AS SUM_SLOT
                                    FROM %%%TABLE_NAME%%%      T1,
                                         USER_GROUP_DEPARTMENT T2
                                   WHERE TIME_STAMP >= %%%START_TIMESTAMP%%%
                                     AND TIME_STAMP < %%%END_TIMESTAMP%%%
                                     AND GROUP_TYPE = 'user'
                                     AND JOB_STATUS IN
                                         ('PEND', 'SYS_SUSP', 'USER_SUSP')
                                     AND T1.GROUP_NAME = T2.USER_NAME
                                    ${QUERY_CONDITION_USER_VALUE}
                                   GROUP BY TIME_STAMP,
                                            CLUSTER_NAME,
                                            USER_GROUP_NAME,
                                            USER_DEPARTMENT_NAME) BB ON AA.TIME_STAMP =
                                                                        BB.TIME_STAMP
                                                                    AND AA.USER_GROUP_NAME =
                                                                        BB.USER_GROUP_NAME)
         WHERE GROUP_NAME IS NOT NULL
         GROUP BY GROUP_NAME, USER_DEPARTMENT_NAME) AA,
       (SELECT USER_GROUP_NAME, DEPARTMENT_MAP, SUM(REAL_JOBS) AS NUM_EXECUTED_JOB,
          SUM(REAL_SLOTS) AS SUM_RUN_SLOT
          FROM (SELECT U.USER_GROUP_NAME,
                       U.DEPARTMENT_MAP,
                       SUM(REAL_JOBS - REPEATED_REAL_JOBS) AS REAL_JOBS,
                       SUM(REAL_SLOTS - REPEATED_REAL_SLOTS) AS REAL_SLOTS
                  FROM ${TABLE_NAME} C, USER_GROUP_DEPARTMENT U
                 WHERE TIME_STAMP >= ${START_TIMESTAMP}
                   AND TIME_STAMP < ${END_TIMESTAMP}
                   AND JOB_STATUS = 'RUN'
                   AND GROUP_TYPE = 'user'
                   AND C.GROUP_NAME = U.USER_NAME
                   ${QUERY_CONDITION_USER_VALUE}
                 GROUP BY U.USER_GROUP_NAME, U.DEPARTMENT_MAP
                UNION ALL
                SELECT U.USER_GROUP_NAME,
                       U.DEPARTMENT_MAP,
                       SUM(REPEATED_REAL_JOBS) AS REAL_JOBS,
                       SUM(REPEATED_REAL_SLOTS) AS REAL_SLOTS
                  FROM ${TABLE_NAME} C, USER_GROUP_DEPARTMENT U
                 WHERE TIME_STAMP =
                       (SELECT MIN(TIME_STAMP)
                          FROM ${TABLE_NAME}
                         WHERE TIME_STAMP >= ${START_TIMESTAMP}
                           AND TIME_STAMP < ${END_TIMESTAMP})
                   AND GROUP_TYPE = 'user'
                   AND C.GROUP_NAME = U.USER_NAME
                   ${QUERY_CONDITION_USER_VALUE}
                   AND JOB_STATUS = 'RUN'
                 GROUP BY U.USER_GROUP_NAME, U.DEPARTMENT_MAP)
         GROUP BY USER_GROUP_NAME, DEPARTMENT_MAP) BB
 WHERE AA.GROUP_NAME = BB.USER_GROUP_NAME
 ORDER BY BB.DEPARTMENT_MAP ASC
			]]></SQL>
		</Query>
	</Queries>
	<Layouts>
	<Layout SHOW_BAR_CHART="true">
	<!-- The Type refer the report type. e.g. LineChart, Table, ClusteredBarChart, StackedBarChart -->
	<Type>STACKED_BAR_CHART</Type>
	<DataSetName>DS1</DataSetName>
	<Title>用户组CPU占用情况</Title>
			<Subtitles>
				<Subtitle>从 %%%REAL_START_TIME%%% 到 %%%REAL_END_TIME%%%</Subtitle>
			</Subtitles>
			<Size Width="982" Height="420" />
		<!-- The label will display in chart Time-->
		<X-Axis Label="时间" Type="TIME" Period="%%%X_AXIS_PERIOD%%%" Start="%%%REAL_START_TIME%%%" End="%%%REAL_END_TIME%%%">
			<!-- The column map the name from sql statement. Type refer maybe Timestamp and Catetory(String), The Period attribute only for Timestamp type.-->
			<Column>TIME_STAMP</Column>
		</X-Axis>
		<Y-Axis Label="CPU占用数(个)" Format="#,###,###,##0.000"/>
		<Series>

			<FromColumns>
				<Column>RUN</Column>
				<Column>PEND</Column>
			</FromColumns>
		</Series>
	</Layout>
	<Layout>
			<Type>TABLE</Type>
			<DataSetName>DS2</DataSetName>
			<Title>CPU占用最大值、平均值统计表</Title>
			<Subtitles>
				<Subtitle>从 %%%REAL_START_TIME%%% 到 %%%REAL_END_TIME%%%</Subtitle>
			</Subtitles>
			<Size Width="980" Height="10" />
			<!-- The label will display in chart Time-->
			<TableColumns>
				<TableColumn Name="USER_DEPARTMENT_NAME" Label="用户组"/>
				<TableColumn Name="MAX_RUN_SLOT" Label="最大(个)" UpperHeader="占用的CPU数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="AVG_RUN_SLOT" Label="平均(个)" UpperHeader="占用的CPU数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="MAX_PEND_SLOT" Label="最大(个)" UpperHeader="排队等待的CPU数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="AVG_PEND_SLOT" Label="平均(个)" UpperHeader="排队等待的CPU数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="MAX_REQUESTED_SLOT" Label="最大(个)" UpperHeader="请求的CPU数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="AVG_REQUESTED_SLOT" Label="平均(个)" UpperHeader="请求的CPU数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
			</TableColumns>
		</Layout>
	<Layout>
			<Type>TABLE</Type>
			<DataSetName>DS2</DataSetName>
			<Title>CPU占用情况统计表</Title>
			<Subtitles>
				<Subtitle>从 %%%REAL_START_TIME%%% 到 %%%REAL_END_TIME%%%</Subtitle>
			</Subtitles>
			<Size Width="980" Height="10" />
			<!-- The label will display in chart Time-->
			<TableColumns>
				<TableColumn Name="USER_DEPARTMENT_NAME" Label="用户组"/>
				<TableColumn Name="NUM_EXECUTED_JOB" Label="占用的CPU总次数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="SUM_RUN_SLOT" Label="总数(个)" UpperHeader="占用的CPU数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="AVG_RUN_SLOT_PER_JOB" Label="平均(个)" UpperHeader="占用的CPU数" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="SUM_RUN_TIME_BY_JOB" Label="总时间(小时)" UpperHeader="CPU计算时间" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="AVG_RUN_TIME_BY_JOB" Label="平均时间(小时)" UpperHeader="CPU计算时间" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="SUM_RUN_TIME" Label="总和(个*小时)" UpperHeader="CPU数*占用时间" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
				<TableColumn Name="AVG_RUN_TIME_PER_JOB" Label="平均(个*小时)" UpperHeader="CPU数*占用时间" Type="NUMERIC" Format="#,###,###,##0.00" Style="text-align:right"/>
			</TableColumns>
		</Layout>
	</Layouts>
	<DataExports>
		<DataExport Name="DS1">
			<Column Name="TIME_STAMP" Label="时间" />
			<Column Name="USER_DEPARTMENT_NAME" Label="用户组" />
			<Column Name="RUN" Label="占用的CPU数(个)" />
			<Column Name="RUN_TIME_BY_JOB" Label="正常完成-占用CPU(个)" />
			<Column Name="RUN_TIME" Label="正常完成-运算时间(小时)" />
			<Column Name="PEND" Label="排队等待的CPU数(个)" />
		</DataExport>
		<DataExport Name="DS2">
			<Column Name="USER_DEPARTMENT_NAME" Label="用户组" />
			<Column Name="MAX_RUN_SLOT" Label="占用的CPU数_最大(个)" />
			<Column Name="AVG_RUN_SLOT" Label="占用的CPU数_平均(个)" />
			<Column Name="MAX_PEND_SLOT" Label="排队等待的CPU数_最大(个)" />
			<Column Name="AVG_PEND_SLOT" Label="排队等待的CPU数_平均(个)" />
			<Column Name="MAX_REQUESTED_SLOT" Label="请求的CPU数_最大(个)" />
			<Column Name="AVG_REQUESTED_SLOT" Label="请求的CPU数_平均(个)" />
			<Column Name="NUM_EXECUTED_JOB" Label="占用的CPU总次数" />
			<Column Name="SUM_RUN_SLOT" Label="占用的CPU次数_总数(个)" />
			<Column Name="AVG_RUN_SLOT_PER_JOB" Label="占用的CPU次数_平均(个)" />
			<Column Name="SUM_RUN_TIME_BY_JOB" Label="CPU计算时间_总时间(小时)" />
			<Column Name="AVG_RUN_TIME_BY_JOB" Label="CPU计算时间_平均时间(小时)" />
			<Column Name="SUM_RUN_TIME" Label="CPU数*占用时间_总和(个*小时)" />
			<Column Name="AVG_RUN_TIME_PER_JOB" Label="CPU数*占用时间_平均(个*小时)" />
		</DataExport>
	</DataExports>
	<Variables>
		<Variable Name="StartTime" Target="StartTime" Source="REQUEST" />
		<Variable Name="EndTime" Target="EndTime" Source="REQUEST" />
		<Variable Name="GROUP_NAME" Target="GROUP_NAME" Source="REQUEST" />
		<Variable Name="RESOURCE_SHORT_NAME" Target="RESOURCE_NAME" Source="REQUEST" />
		<Variable Name="DATA_GRANULARITY"  Target="DATA_GRANULARITY" Source="REQUEST" />
		<Variable Name="ORGANIZATION_NAME" Target="ORGANIZATION_NAME" Source="REQUEST" />

		<!-- Variable can be gotten from X_AXIS_PERIOD_SOURCE -->
		<Variable Name="X_AXIS_PERIOD"  Target="X_AXIS_PERIOD" Source="X_AXIS_PERIOD_SOURCE" />

		<!-- Variable used to present report last month of database server. -->
		<Variable Name="LAST_MONTH" Target="REAL_START_TIME" Source="REAL_TIME_RANGE" >
			<Format Plug-in="com.platform.perf.report.config.var.format.DateTimeFormat" Pattern="yyyy-MM" />
		</Variable>

		<!-- Variable used to present report current month of database server. -->
		<Variable Name="CURRENT_MONTH" Target="REAL_START_TIME" Source="REAL_TIME_RANGE" >
			<Format Plug-in="com.platform.perf.report.config.var.format.DateTimeFormat" Pattern="yyyy-MM" />
		</Variable>

		<Variable Name="REAL_START_TIME" Target="REAL_START_TIME" Source="REAL_TIME_RANGE" >
			<Format Plug-in="com.platform.perf.report.config.var.format.DateTimeFormat" Pattern="yyyy-MM-dd HH:mm" />
		</Variable>

		<Variable Name="REAL_END_TIME" Target="REAL_END_TIME" Source="REAL_TIME_RANGE" >
			<Format Plug-in="com.platform.perf.report.config.var.format.DateTimeFormat" Pattern="yyyy-MM-dd HH:mm" />
		</Variable>
		<!-- Variables used to build the SQL -->
		<Variable Name="QUOTED_GROUP_NAME" Source="QUERY_BUILD_SOURCE" Target="GROUP_NAME" Function="TO_COMMA_DELIMITED_QUOTED_STRING" />
		<Variable Name="ORGANIZATION_NAME_VALUE" Source="QUERY_BUILD_SOURCE" Target="ORGANIZATION_NAME" Function="TO_COMMA_DELIMITED_QUOTED_STRING" />
		<Variable Name="SUB_TITLE" Source="QUERY_BUILD_SOURCE" Target="GROUP_NAME" Function="TO_COMMA_DELIMITED_STRING" />
		<Variable Name="START_TIMESTAMP" Source="QUERY_BUILD_SOURCE" Target="START_TIME" Function="TO_TIMESTAMP" />
		<Variable Name="END_TIMESTAMP" Source="QUERY_BUILD_SOURCE" Target="END_TIME" Function="TO_TIMESTAMP" />
		<Variable Name="TRUNCATED_TIMESTAMP" Source="QUERY_BUILD_SOURCE" Target="TIMESTAMP_COLUMN" Function="TRUNC_TIME_TO_%%%DATA_GRANULARITY%%%" />
		<Variable Name="TABLE_NAME" Target="DATA_GRANULARITY" Source="MAP" />
		<Variable Name="EXEC_JOB" Target="DATA_GRANULARITY" Source="MAP2" />
		<Variable Name="SHOW_BAR_CHART" Target="SHOW_BAR_CHART" Source="SHOW_BAR_CHART" />

		<Variable Name="QUERY_CONDITION_USER_VALUE" Target="QUERY_CONDITION_USER" Source="QUERY_CONDITION_SOURCE" Function="TO_COMMA_DELIMITED_QUOTED_STRING" />
	</Variables>
	<Sources>
		<Source Name="REQUEST" Plug-in="com.platform.perf.report.config.var.source.RequestVariableSource" />
		<Source Name="REAL_TIME_RANGE" Plug-in="com.platform.perf.report.config.var.source.RealTimeRangeSource">
			<Parameter Name="START_TIME">%%%StartTime%%%</Parameter>
			<Parameter Name="END_TIME">%%%EndTime%%%</Parameter>
		</Source>
		<Source Name="QUERY_BUILD_SOURCE" Plug-in="com.platform.perf.report.config.var.source.QueryBuildSource">
			<Parameter Name="GROUP_NAME">%%%GROUP_NAME%%%</Parameter>
			<Parameter Name="START_TIME">%%%StartTime%%%</Parameter>
			<Parameter Name="END_TIME">%%%EndTime%%%</Parameter>
			<Parameter Name="ORGANIZATION_NAME">%%%ORGANIZATION_NAME%%%</Parameter>
			<Parameter Name="TIMESTAMP_COLUMN">TIME_STAMP</Parameter>
		</Source>

		<Source Name="QUERY_CONDITION_SOURCE" Plug-in="com.platform.perf.report.config.var.source.QueryConditionSource">
			<Parameter Name="QUERY_CONDITION_USER">
				<Group Operator="AND" Where="false">
					<Condition Operator="" Express="T2.USER_GROUP_NAME IN">${GROUP_NAME}</Condition>
				</Group>
			</Parameter>

		</Source>

		<Source Name="X_AXIS_PERIOD_SOURCE" Plug-in="com.platform.perf.report.config.var.source.DataIntervalSource">
			<Parameter Name="DATA_LOADER">sharedresusageloader</Parameter> <!-- Use this data loader name to get data interval from plc configuration file -->
			<Parameter Name="DEFAULT_INTERVAL">5m</Parameter> <!-- No interval found in plc configuration file, use this defualt value -->
			<Parameter Name="BASE_LEVEL">MINUTE</Parameter> <!-- This parameter is optional, default is MINUTE -->
			<Parameter Name="CURRENT_LEVEL">%%%DATA_GRANULARITY%%%</Parameter> <!-- This parameter is optional, default is MINUTE. The current level is not equivalent to the base level means data interval need change -->
		</Source>
		<Source Name="MAP" Plug-in="com.platform.perf.report.config.var.source.MapVariableSource" >
			<Parameter Name="VARIABLE_NAME">%%%DATA_GRANULARITY%%%</Parameter>
			<Parameter Name="MAP">
				<Map>
					<Entry>
						<Key>MINUTE</Key><Value>CPU_MONITOR_SAMPLING</Value>
					</Entry>
					<Entry>
						<Key>HOUR</Key><Value>CPU_MONITOR_HOURLY</Value>
					</Entry>
					<Entry>
						<Key>DAY</Key><Value>CPU_MONITOR_DAILY</Value>
					</Entry>
				</Map>
			</Parameter>
		</Source>
		<Source Name="MAP2" Plug-in="com.platform.perf.report.config.var.source.MapVariableSource" >
			<Parameter Name="VARIABLE_NAME">%%%DATA_GRANULARITY%%%</Parameter>
			<Parameter Name="MAP">
				<Map>
					<Entry>
						<Key>MINUTE</Key><Value>SAMPLING_COUNT</Value>
					</Entry>
					<Entry>
						<Key>HOUR</Key><Value>EXECUTED_JOBS</Value>
					</Entry>
					<Entry>
						<Key>DAY</Key><Value>EXECUTED_JOBS</Value>
					</Entry>
				</Map>
			</Parameter>
		</Source>
		<Source Name="SHOW_BAR_CHART" Plug-in="com.platform.perf.report.config.var.source.BeanScriptSource">
			<Parameter Name="language">java</Parameter>
			<Parameter Name="script">
<![CDATA[
	import com.platform.perf.report.common.IVariableProvider;
	import com.platform.perf.report.config.var.source.request.RequestVariableProvider;
	import com.platform.perf.report.config.var.ReportVariableHelper;

	IVariableProvider varProvider = (IVariableProvider)bsf.lookupBean("varProvider");
	Object groupName = (( varProvider.getValue(ReportVariableHelper.VAR_REQUEST))).getParameterValues("GROUP_NAME");

    if (attributeName != null && groupName instanceof String[]) {
         return ((String[])groupName).length > 1 || (((String[])groupName).length == 1 && "{[ALL]}".equals(((String[])groupName)[0])) ? false : true;
    }
]]>
            </Parameter>
		</Source>
	</Sources>
</Report>
