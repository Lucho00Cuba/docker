<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ego="http://www.platform.com/ego/2005/05/schema" xmlns:sc="http://www.platform.com/ego/2005/05/schema/sc" targetNamespace="http://www.platform.com/ego/2005/05/schema/sc" elementFormDefault="qualified">
    <xsd:annotation>
        <xsd:documentation>
            This schema describes the configuration file format for the EGO Service Controller. 
        </xsd:documentation>
    </xsd:annotation>
    <xsd:import namespace="http://www.platform.com/ego/2005/05/schema" schemaLocation="ego.xsd"/>
    <xsd:element name="Description" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
                 Describes this service. Specify a string that must only contain 0-9 A-Z a-z ! # $ % &amp; ( ) * + , - . / : ; &lt; = &gt; ? @ [ ] ^ _ ` | ~ { } \ " ' or space.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="Type">
        <xsd:annotation>
            <xsd:documentation>
                 Specifies the type of service.
                 (available only with IBM Spectrum Conductor).
            </xsd:documentation>
        </xsd:annotation>
		<xsd:simpleType>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="Default"/>
                <xsd:enumeration value="ASC"/>
                <xsd:enumeration value="CONDUCTOR"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:element name="HeartbeatInterval" type="xsd:duration">
        <xsd:annotation>
            <xsd:documentation>
                 Specifies how often the EGO service controller checks if a service instance is hung.
                 Specify the duration in the format PTnHnMnS,
                 where nH the number of hours, nM the number of minutes and nS the number of seconds.
                 The number of seconds can include decimal digits to arbitrary precision.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="HostFailoverInterval" type="xsd:duration">
        <xsd:annotation>
            <xsd:documentation>
                 Specifies the length of time to wait after a host fails until the service should be
                 restarted on another host.
                 Specify the duration in the format PTnHnMnS,
                 where nH the number of hours, nM the number of minutes and nS the number of seconds.
                 The number of seconds can include decimal digits to arbitrary precision.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="MinInstances">
        <xsd:annotation>
            <xsd:documentation>
				Specifies the minimum number of instances this service requires to run.
				Specify a number greater than or equal to 1.
				Or specifies the minimum percentage of instances this service requires to run.
				Specify a percentage less than or equal to 100 percent.
				(MinInstances as a percentage is available only with IBM Spectrum Conductor.)
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="MaxInstances">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the maximum number of instances this service is allowed to run.
                Specify a number greater than or equal to the value specified for MinInstances.
				Or specifies the maximum percentage of instances this service is allowed to run.
                Specify a percentage greater than or equal to the value specified for MinInstances, and less than or equal to 100 percent.
                (MaxInstances as a percentage is available only with IBM Spectrum Conductor.)
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="MaxMissedHeartbeats">
        <xsd:annotation>
            <xsd:documentation>
                 Specifies the maximum number of missed heartbeats before a  
                 service instance is considered hung.
                 Specify a number greater than or equal to 1.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
            <xsd:restriction base="xsd:integer">
                <xsd:minInclusive value="0"/>
                <xsd:maxInclusive value="2147483647"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:element name="MaxRestarts">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the maximum number of times this service can be restarted
                in a defined time interval (5 minutes) before it is flagged in an
                error state. Specify a number greater than or equal to 1.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
            <xsd:restriction base="xsd:integer">
                <xsd:minInclusive value="0"/>
                <xsd:maxInclusive value="2147483647"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:element name="InstanceToSlotRatio" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the instance to slot ratio, which supports 1:N and N:1 (available only with IBM Spectrum Conductor). The setting acts the same as MaxInstancePerSlot when value is N:1; it represents the multi-slot option when value is 1:N.
            </xsd:documentation>
        </xsd:annotation>
	</xsd:element>
    <xsd:element name="Priority">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the order in which the service controller starts services at startup time. 
                Specify a number greater than or equal to 1 that represents the relative starting order for this service.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
            <xsd:restriction base="xsd:integer">
                <xsd:minInclusive value="1"/>
                <xsd:maxInclusive value="2147483647"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:element name="StartOnBoot" type="xsd:boolean">
        <xsd:annotation>
            <xsd:documentation>
                Indicates whether the EGO Service Controller should start this service
                when it starts, or whether it should be left to be started on demand.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="Version" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the version of the service controller this service runs on.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="NeedCredential" type="xsd:boolean">
        <xsd:annotation>
            <xsd:documentation>
                Specifies whether the service requires a credential to be passed from the EGO_SERVICE_CREDENTIAL
                environment variable. Specify TRUE or FALSE.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="Impersonate" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
                Indicate the user for impersonation.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="CollectUsage" type="xsd:boolean">
        <xsd:annotation>
            <xsd:documentation>
                Optional. Specifies whether the service must monitor service resource consumption (available only with IBM Spectrum Conductor). Valid values are TRUE and FALSE. Default value is FALSE.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="UseGPU" type="xsd:boolean">
        <xsd:annotation>
            <xsd:documentation>
                Optional. Specifies whether the service uses GPU (available only with IBM Spectrum Conductor). Valid values are TRUE and FALSE. Default value is FALSE.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="ExclusiveGPU" type="xsd:boolean">
        <xsd:annotation>
            <xsd:documentation>
                Optional. Specifies whether the service uses exclusive mode GPU (available only with IBM Spectrum Conductor). Valid values are TRUE and FALSE. Default value is FALSE.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="StartType">
        <xsd:annotation>
            <xsd:documentation>
                Specifies whether the service starts automatically or manually.
                Specify AUTOMATIC or MANUAL.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="AUTOMATIC"/>
                <xsd:enumeration value="MANUAL"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:simpleType name="DependencyTypeEnumeration">
        <xsd:annotation>
            <xsd:documentation>
                Enumeration type used to identify different types of dependencies.
                (Type as Conditional is available only with IBM Spectrum Conductor.)
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="OnStart"/>
            <xsd:enumeration value="conditional"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:element name="Dependency">
        <xsd:annotation>
            <xsd:documentation>
                This element is used to indicate that there is a dependency on another service, or Docker container.
                The type attribute of the element is used to describe the dependency type, and
                the content of the element holds the name of the service, or Docker container, that is being depended
                on.
                If Dependency is defined in ego:DockerContainer, the type can only be OnStart.
                If the type is OnStart, the service will be started only the service that is being depended on
                is in STARTED states, or the Docker container will be started only the Docker container that is being depended on is started.                
                If the type is conditional, one or all of other parameters including satisfy, keep, autoStart can be set.                
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:simpleContent>
                <xsd:extension base="xsd:string">
                    <xsd:attribute name="type" type="sc:DependencyTypeEnumeration" use="required" />                     
                    <xsd:attribute name="satisfy" type="xsd:string" >                    
                     	<xsd:annotation>
            				<xsd:documentation>
            				     Define a list of states that the antecedent service must be in before the dependent service can start. Optional, Default value is "STARTED"
            				</xsd:documentation>
        				</xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="keep" type="xsd:string" >
                    	<xsd:annotation>
            				<xsd:documentation>
            				     Define a list of states that the antecedent service must be in for the dependent service to keep running. EGO will restart the dependent service if any of the antecedent service is not in the keep state. Optional, default value is "TENTATIVE,STARTED". The states defined in keep parameter must be a super set of the states defined in satisfy parameter
            				</xsd:documentation>
        				</xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="autoStart" type="xsd:boolean" >
                    	<xsd:annotation>
            				<xsd:documentation>
            				     Define whether to start the antecedent service. Optional, Default value is "TRUE"
            				</xsd:documentation>
        				</xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:simpleContent>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="BlockHostExitValues">
        <xsd:annotation>
            <xsd:documentation>
                Specifies exit values, which, if received from all instances of a service on a host,
		            should cause that host to be blocked from running this service. The 
                EGO service controller should not restart instances on that host unless the host is unblocked. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:ExitValue" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ExitValue" type="xsd:integer">
        <xsd:annotation>
            <xsd:documentation>
                Specifies an exit value, which, if received from all instances of a service on a host,
		            should cause that host to be blocked from running this service. The 
                EGO service controller should not restart instances on that host unless the host is unblocked. 
                Specify an integer.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="ServiceFailoverFencing">
        <xsd:annotation>
            <xsd:documentation>
                Ties service instance fencing to resources that match given attributes. For example, 
                use the hostType attribute to restrict fencing to hosts that run the same operating system 
                on the same architecture; for example, "LINUXResourceSpeci86".
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="ego:Attribute" maxOccurs="1"/>
                <xsd:element ref="ego:ActivitySpecification"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ServiceFailoverFencingrWaitPeriod" type="xsd:duration">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the duration that the service controller waits for fencing to complete 
                before terminating the activity for the service instance.
                Specify the duration in the format PTnHnMnS, where:
                nH identifies the number of hours
                nM identifies the number of minutes
                nS identifies the number of seconds (including decimal digits)
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="ControlPolicy">
        <xsd:annotation>
            <xsd:documentation>
                 Describes the service lifecycle parameters of a service. It defines parameters for starting and 
                 restarting the service, and detecting hung services.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:StartType"/>
                <xsd:element ref="sc:MaxRestarts" minOccurs="0"/>
                <xsd:element ref="sc:HostFailoverInterval" minOccurs="0"/>
                <xsd:element ref="sc:Dependency" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="sc:BlockHostExitValues" minOccurs="0"/>
                <xsd:element ref="sc:ServiceFailoverFencing" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="sc:ServiceFailoverFencingrWaitPeriod" minOccurs="0"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
	<xsd:element name="BaseVirtualIP" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
				Specifies the basic virtual IP address for high availability. Each service instance has a unique virtual IP address. 
				The virtual IP address for the specified service instance is "BaseVirtualIP + service instance sequence number - 1". 
				The virtual IP address must be IPv4 and in the "x.x.x.x" format.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="Netmask" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
				Specifies the network mask for BaseVirtualIP.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="VirtualIPSettings">
        <xsd:annotation>
            <xsd:documentation>
				Specifies the virtual IP-related settings that are used for high availability support. Virtual IP settings define all information that is needed to apply a virtual IP address to the target host.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:BaseVirtualIP" minOccurs="1" maxOccurs="1"/>
                <xsd:element ref="sc:Netmask" minOccurs="0" maxOccurs="1"/>
             </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="NetworkPolicy">
        <xsd:annotation>
            <xsd:documentation>
                Specifies network-related parameters of a service (available only with IBM Spectrum Conductor).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:VirtualIPSettings" minOccurs="0" maxOccurs="1"/>
             </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="ActivityDescription">
        <xsd:annotation>
            <xsd:documentation>
                Ties a particular ActivitySpecification to resources that 
                match given attributes. For example, on a compute host type of resource, you might
                use the hostType attribute to restrict an ActivitySpecification to hosts with
                a hostType of "LINUXResourceSpeci86".
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="ego:Attribute" maxOccurs="1"/>
                <xsd:element ref="ego:ActivitySpecification"/>
                <xsd:element ref="ego:LogPath" maxOccurs="1"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:simpleType name="AffinityTypeEnumeration">
        <xsd:annotation>
          <xsd:documentation>
            Specify if the affinity condition should be considered as 
            strictly required, or preferred. A "hard" affinity condition 
            means the condition must be met in order to start the service
            instance. A "soft" affinity means the condition will be 
            attempted, however, it is also okay to start somewhere else in case
            matching resource is not available at time of start-up.
          </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="hard"/>
          <xsd:enumeration value="soft"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:element name="Affinity">
        <xsd:annotation>
          <xsd:documentation>
            Affinity condition for a service, where the content is the
            name of the service or service group that this service has the
            requirement against.
            Affinity means service instances should run on the same host 
            which has the related service's instances running already. 
            An affinity can also be defined as "hard" or "soft",
            default is "hard".
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="type" type="sc:AffinityTypeEnumeration" use="optional" default="hard" />
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AntiAffinity">
        <xsd:annotation>
            <xsd:documentation>
              AntiAffinity condition for a service, where the content is the
              name of the service or service group that this service has the
              requirement against.
              AntiAffinity means service instances should avoid to run on the
              same host which has the related service's instances running 
              already.
              An anti-affinity can also be defined as "hard" or "soft",
              default is "hard".
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attribute name="type" type="sc:AffinityTypeEnumeration" use="optional" default="hard" />
              </xsd:extension>
            </xsd:simpleContent>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AffinityRequirements">
        <xsd:annotation>
          <xsd:documentation>
            A list of affinity conditions, which will be treated as logical AND (available only with IBM Spectrum Conductor).
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:Affinity" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="sc:AntiAffinity" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="MetricName" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
                Name of Resource Metric.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="MetricValue" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
                Value of Resource Metric.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="ResourcePlanName" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
                Name of Resource Plan.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="ResourceMetric">
        <xsd:annotation>
            <xsd:documentation>
                Required. Specifies MDS dimension.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:MetricName" minOccurs="1" maxOccurs="1"/>
                <xsd:element ref="sc:MetricValue" minOccurs="1" maxOccurs="1"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="MdsProperties">
        <xsd:annotation>
            <xsd:documentation>
                Define Allocation information for MDS resource scheduler.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:ResourcePlanName" minOccurs="1" maxOccurs="1"/>
                <xsd:element ref="sc:ResourceMetric" minOccurs="1" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ResourceSpecification">
        <xsd:annotation>
            <xsd:documentation>
                Describes the resources required by this service.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="ego:ResourceGroupName" minOccurs="0"/>
                <xsd:element ref="ego:ResourceRequirement" minOccurs="0"/>
                <xsd:element ref="sc:AffinityRequirements" minOccurs="0"/>
                <xsd:element ref="sc:MdsProperties" minOccurs="0"/>
            </xsd:sequence>
            <xsd:attribute name="ResourceType" type="xsd:anyURI" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                       Indicates the type of a resource. The URI is intended to match with the URI of the 
                       namespace of an XML schema that is used to further describe the resource.
            </xsd:documentation>
               </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="AllocationSpecification">
        <xsd:annotation>
            <xsd:documentation>
                Describes the resource allocation information for this service.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="ego:ConsumerID"/>
                <xsd:element ref="sc:ResourceSpecification"/>
            </xsd:sequence>
            <xsd:attribute name="AllocationName" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ServiceDefinition">
        <xsd:annotation>
            <xsd:documentation>
                Configures a service to be managed by the EGO service controller, 
                defining version, resources, allocations, activities, and other configuration parameters.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:Version"/>
                <xsd:element ref="sc:Description"/>
                <xsd:element ref="sc:MinInstances"/>
                <xsd:element ref="sc:MaxInstances"/>
                <xsd:element ref="sc:MaxInstancesPerSlot"/>
                <xsd:element ref="sc:MaxInstancesPerHost" minOccurs="0"/>
                <xsd:element ref="sc:InstanceToSlotRatio" minOccurs="0"/>
                <xsd:element ref="sc:Priority"/>
                <xsd:element ref="sc:ControlPolicy"/>
                <xsd:element ref="sc:NetworkPolicy" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="sc:AllocationSpecification"/>
                <xsd:element ref="sc:ActivityDescription" maxOccurs="unbounded"/>
                <xsd:element ref="sc:NeedCredential"/>
                <xsd:element ref="sc:Impersonate" minOccurs="0"/>
                <xsd:element ref="sc:Type" minOccurs="0"/>
                <xsd:element ref="sc:CollectUsage" minOccurs="0"/>
                <xsd:element ref="sc:UseGPU" minOccurs="0"/>
                <xsd:element ref="sc:ExclusiveGPU" minOccurs="0"/>
            </xsd:sequence>
            <xsd:attribute name="ServiceName" type="xsd:string" use="required">
                 <xsd:annotation>
                     <xsd:documentation>
                       Specifies a unique name for the service that is up to 200 alphanumeric characters or hyphens long. 
                       The service name must start with an alphabetic character.
                    </xsd:documentation>
                 </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="MaxInstancesPerSlot"> 
       <xsd:annotation>
            <xsd:documentation>
               Specifies the maximum number of instances of this service allowed per CPU slot.
               Specify a number greater than or equal to 1. To fully utilize resources, 
               it is recommended to configure MaxInstancesPerSlot so that it divides evenly into 
               MaxInstancesPerHost. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
            <xsd:restriction base="xsd:integer">
                <xsd:minInclusive value="1"/>
                 <xsd:maxInclusive value="2147483647"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:element name="MaxInstancesPerHost">
       <xsd:annotation>
            <xsd:documentation>
                Specifies the maximum number of instances of this service allowed per host.
                Specify a number greater than or equal to 1. 
                Limitation: No service instance can be started on a host if ceiling integer of
                (MaxInstancesPerHost/MaxInstancesPerSlot) is more than the number of free
                slots on that host. It may cause slot wastage if you configure MaxInstancesPerHost 
                so that it does not divide evenly into MaxInstances. Refer to Cluster and 
                Application Management Guide for more details.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
            <xsd:restriction base="xsd:integer">
                <xsd:minInclusive value="1"/>
                 <xsd:maxInclusive value="2147483647"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:simpleType name="ServiceStateEnumeration">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="defined"/>
            <xsd:enumeration value="init"/>
            <xsd:enumeration value="allocating"/>
            <xsd:enumeration value="started"/>
            <xsd:enumeration value="deallocating"/>
            <xsd:enumeration value="error"/>
            <xsd:enumeration value="hang"/>
            <xsd:enumeration value="frozen"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="ServiceInstanceStateEnumeration">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="null"/>
            <xsd:enumeration value="start"/>
            <xsd:enumeration value="run"/>
            <xsd:enumeration value="suspend"/>
            <xsd:enumeration value="finish"/>
            <xsd:enumeration value="unknown"/>
            <xsd:enumeration value="hang"/>
            <xsd:enumeration value="error"/>
            <xsd:enumeration value="hold"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:element name="InstanceSequenceId" type="xsd:string"/>
    <xsd:element name="ServiceInstanceInfo">
        <xsd:annotation>
            <xsd:documentation>
                The ServiceInstanceInfo element describes the configuration of a single instance of a service
                to be managed by the EGO Service Controller. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="ServiceInstanceState" type="sc:ServiceInstanceStateEnumeration"/>
                <xsd:element ref="ego:ActivityID"/>
                <xsd:element ref="ego:ResourceName"/>
                <xsd:element ref="sc:InstanceSequenceId"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="NumServiceInstances" type="xsd:int">
        <xsd:annotation>
            <xsd:documentation>
                The number of active service instances for a service.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="ServiceInfo">
        <xsd:annotation>
            <xsd:documentation>
                The ServiceInfo element describes the configuration of a single service
                to be managed by the EGO Service Controller. The ServiceName attribute identifies this
                service, and must be unique amongst all services controlled by the EGO Service
                Controller.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:ServiceDefinition"/>
                <xsd:element name="ServiceState" type="sc:ServiceStateEnumeration"/>
                <xsd:element ref="sc:ServiceAllocationInfo"/>
                <xsd:element ref="sc:NumServiceInstances"/>
                <xsd:element ref="sc:ServiceInstanceInfo" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:attribute name="ServiceName" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ServiceName" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation>
                Specifies a unique name for the service. Specify up to 200 alphanumeric characters or hyphens, where the first character
                is alphabetic.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    <xsd:element name="ServiceStateChange">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:ServiceName"/>
                <xsd:element name="OldState" type="sc:ServiceStateEnumeration"/>
                <xsd:element name="NewState" type="sc:ServiceStateEnumeration"/>
                <xsd:element ref="ego:AllocationID"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ServiceInstanceStateChange">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="sc:ServiceName"/>
                <xsd:element ref="sc:InstanceSequenceId"/>
                <xsd:element ref="ego:ResourceName"/>
                <xsd:element name="OldState" type="sc:ServiceInstanceStateEnumeration"/>
                <xsd:element name="NewState" type="sc:ServiceInstanceStateEnumeration"/>
                <xsd:element ref="ego:ActivityID"/>
                <xsd:element name="Reason" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ServiceControlOperation">
        <xsd:simpleType>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="enable"/>
                <xsd:enumeration value="disable"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:element name="ServiceInstanceControlOperation">
        <xsd:simpleType>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="stop"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
    <xsd:element name="SubscriptionID" type="xsd:string"/>
    <xsd:element name="ServiceAllocationInfo">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="ego:AllocationID"/>
                <xsd:element ref="ego:Resource" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="ServiceNotificationState">
        <xsd:simpleType>
            <xsd:restriction base="xsd:string">
                <xsd:enumeration value="ok"/>
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>
</xsd:schema>
