#!/bin/csh

# Find a version of awk we can trust

set echo_on = `set | grep ^echo | grep -v ^echo_`
if ( "$echo_on" == "echo" ) then
    unset echo
endif

set LSNULFILE=/dev/null
set AWK=""
foreach tmp (awk  /usr/toolbox/nawk gawk nawk)
#   This is the real test, for functions & tolower
#    if foo=`(echo FOO | $tmp 'function tl(str) { return tolower(str) } { print tl($1) }') 2>$LSNULFILE` \
#       && test "$foo" = "foo"
#   A simpler test, just for executability
    set val_tmp=`$tmp 'BEGIN{ } { }'< $LSNULFILE |& cat`
    if ( "$val_tmp" == "" )  then
	set AWK=$tmp
        break
    endif
end

if (  "$AWK" == "") then
    echo "Cannot find a correct version of awk."
    echo "Exiting ..."
    exit 1
endif

setenv HF_VERSION 1.2
setenv HF_TOP /opt/ibm/spectrumcomputing/hostfactory

set _CUR_PATH_ENV = "$PATH"

set BINARY_TYPE="fail"
set machine=`uname -m`
switch ($machine)
case x86_64:
    set BINARY_TYPE="linux2.6-glibc2.3-x86_64"
    breaksw
case ppc64le:
    set BINARY_TYPE="linux3.10-glibc2.17-ppc64le"
    breaksw
endsw
    
setenv HF_ETCDIR $HF_TOP/$HF_VERSION/$BINARY_TYPE/etc
set _NEW_PATH_ENV="${HF_ETCDIR}:${_CUR_PATH_ENV}"
setenv PATH $_NEW_PATH_ENV

setenv HF_LIBDIR $HF_TOP/$HF_VERSION/$BINARY_TYPE/lib
       
if ($?LD_LIBRARY_PATH) then
    setenv LD_LIBRARY_PATH ${HF_LIBDIR}:${LD_LIBRARY_PATH}
else
    setenv LD_LIBRARY_PATH $HF_LIBDIR
endif

#remove duplicated entries
set LD_LIBRARY_PATH_TMP=`echo $LD_LIBRARY_PATH | $AWK 'BEGIN{RS=":";ORS=":"}{if (a[$1]==0)  {if (NR > 1) printf ORS; printf $a[$1]}; a[$1]++;}'`
set PATH_TMP=`echo $PATH | $AWK 'BEGIN{RS=":";ORS=":"}{if (a[$1]==0)  {if (NR > 1) printf ORS; printf $a[$1]}; a[$1]++;}'`
setenv LD_LIBRARY_PATH $LD_LIBRARY_PATH_TMP
setenv PATH $PATH_TMP
unset LD_LIBRARY_PATH_TMP
unset PATH_TMP

unset AWK

